mutate(block = paste0(gsub("%", "", switchProp), "/", gsub("%", "", incProp))) %>%
select(block, term, estimate, statistic, p.value) %>%
mutate(estimate = round(estimate, 2),
statistic = round(statistic, 2))
kable(final, format="latex",vline="", linesep="")
library(tidyverse)
library(plotrix)
library(ggnewscale)
library(cowplot)
setwd("C:/Users/rmg55/Documents/Programming/contextual-stability-flexibility-tradeoffs")
#load data
df <- read_csv('data/exp1_task_switching/RT_df.csv', show_col_types = FALSE)
View(df)
# PLOT 1
RT_sub_means <- df %>%
group_by(subject, taskSequence, congruency, switchProp, incProp) %>%
summarise(mean_RT = mean(RT, na.rm=TRUE))
RT_means <- RT_sub_means %>%
group_by(taskSequence, congruency, switchProp, incProp) %>%
summarise(sem_RT = std.error(mean_RT, na.rm=TRUE), mean_RT = mean(mean_RT, na.rm=TRUE)) %>%
mutate(taskSequence = as.factor(taskSequence))
#congruency effects by switch costs
labs <- levels(RT_means$taskSequence)
plt <- ggplot(RT_means, aes(x = as.numeric(RT_means$taskSequence), y = mean_RT,
fill=paste0(RT_means$taskSequence, RT_means$congruency))
) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=mean_RT - sem_RT, ymax = mean_RT + sem_RT), position=position_dodge(0.9), width=0.3) +
# coord_cartesian(ylim=c(600,1000)) +
coord_cartesian(ylim=c(800,1100)) +
scale_fill_manual(name="Congruency: ",
breaks=c("ri", "rc"),
values= c("si" = "#023047", "ri" = "#023047", "sc" = "#8ecae6", "rc" = "#8ecae6"),
labels=c("rc" = "Congruent", "ri" = "Incongruent")) +
scale_x_continuous(breaks = 1:length(labs),
labels = c("r" = "Repeat", "s" = "Switch"),
expand = c(0, 0.6),
sec.axis = sec_axis(~ . , name = "Switch Proportion", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Incongruent Proportion", breaks = NULL, labels = NULL)) +
labs(fill = "Task Sequence") +
# scale_x_discrete(labels = c('s' = 'Switch', 'r' = 'Repeat')) +
xlab("Task Sequence") +
ylab("Reaction Time (ms)") +
theme_cowplot(font_size=18) +
facet_grid(incProp ~ switchProp) +
theme(panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.spacing = unit(-0.05, "lines"),
axis.line.x.top = element_blank(),
axis.line.y.right  = element_blank())
plt_legend <- get_legend(plt + theme(legend.direction = "horizontal",legend.justification="center" ,legend.box.just = "bottom"))
plt <- plt + theme(legend.position="none")
plt_final <- plot_grid(plt, plt_legend, rel_heights = c(1, 0.1), align = "v", ncol=1)
plt_final
labs <- levels(RT_means$taskSequence)
plt <- ggplot(RT_means, aes(x = as.numeric(RT_means$taskSequence), y = mean_RT,
fill=paste0(RT_means$taskSequence, RT_means$congruency))
) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=mean_RT - sem_RT, ymax = mean_RT + sem_RT), position=position_dodge(0.9), width=0.3) +
coord_cartesian(ylim=c(600,1000)) +
scale_fill_manual(name="Congruency: ",
breaks=c("ri", "rc"),
values= c("si" = "#023047", "ri" = "#023047", "sc" = "#8ecae6", "rc" = "#8ecae6"),
labels=c("rc" = "Congruent", "ri" = "Incongruent")) +
scale_x_continuous(breaks = 1:length(labs),
labels = c("r" = "Repeat", "s" = "Switch"),
expand = c(0, 0.6),
sec.axis = sec_axis(~ . , name = "Switch Proportion", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Incongruent Proportion", breaks = NULL, labels = NULL)) +
labs(fill = "Task Sequence") +
# scale_x_discrete(labels = c('s' = 'Switch', 'r' = 'Repeat')) +
xlab("Task Sequence") +
ylab("Reaction Time (ms)") +
theme_cowplot(font_size=18) +
facet_grid(incProp ~ switchProp) +
theme(panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.spacing = unit(-0.05, "lines"),
axis.line.x.top = element_blank(),
axis.line.y.right  = element_blank())
plt_legend <- get_legend(plt + theme(legend.direction = "horizontal",legend.justification="center" ,legend.box.just = "bottom"))
plt <- plt + theme(legend.position="none")
plt_final <- plot_grid(plt, plt_legend, rel_heights = c(1, 0.1), align = "v", ncol=1)
plt_final
RT_sub_congruencyeffects <- RT_sub_means %>%
group_by(subject, taskSequence, switchProp, incProp) %>%
mutate(RT_total = sum(mean_RT)) %>%
filter(congruency == "i") %>%
mutate(congruent_RT = RT_total - mean_RT,
congruency_effect = mean_RT - congruent_RT) %>%
select(subject, taskSequence, switchProp, incProp, congruency_effect)
RT_congruencyeffects <- RT_sub_congruencyeffects %>%
group_by(taskSequence, switchProp, incProp) %>%
summarise(sem_ce = std.error(congruency_effect), mean_ce = mean(congruency_effect)) %>%
mutate(taskSequence = as.factor(taskSequence))
labs <- levels(RT_congruencyeffects$taskSequence)
plt2 <- ggplot(RT_congruencyeffects, aes(x = as.numeric(RT_congruencyeffects$taskSequence), y = mean_ce, fill=taskSequence)) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=mean_ce - sem_ce, ymax = mean_ce + sem_ce), position=position_dodge(0.9), width=0.3) +
scale_fill_manual(values=c("s" = "darkslategrey", "r" = "grey")) +
# scale_x_discrete(labels = c("r" = "Repeat", "s" = "Switch")) +
scale_x_continuous(breaks = 1:length(labs),
labels = c("r" = "Repeat", "s" = "Switch"),
expand = c(0, 0.6),
sec.axis = sec_axis(~ . , name = "Switch Proportion", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Incongruent Proportion", breaks = NULL, labels = NULL)) +
facet_grid(incProp ~ switchProp) +
theme_cowplot(font_size = 18) +
xlab("Task Sequence") +
ylab("Congruency Effect (ms)") +
theme(legend.position = "none",
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.spacing = unit(-0.05, "lines"),
axis.line.x.top = element_blank(),
axis.line.y.right  = element_blank()) +
coord_cartesian(ylim=c(0,150))
plt2
RT_sub_ce_diffs <- RT_sub_congruencyeffects %>%
ungroup() %>%
group_by(subject, switchProp, incProp) %>%
mutate(ce_total = sum(congruency_effect)) %>%
filter(taskSequence == "s") %>%
mutate(repeat_ce = ce_total - congruency_effect,
ce_diff = congruency_effect - repeat_ce) %>%
select(subject, switchProp, incProp, ce_diff)
RT_ce_diffs <- RT_sub_ce_diffs %>%
group_by(subject, switchProp, incProp) %>%
summarise(mean_ce_diff = mean(ce_diff)) %>%
mutate(proportion = paste(switchProp, incProp, sep="_"))
ggplot(RT_ce_diffs, aes(x = proportion, y = mean_ce_diff, fill=proportion)) +
geom_boxplot() +
xlab("Switch_Incongruent Proportion")
# PAIRWISE
pairwise.t.test(RT_ce_diffs$mean_ce_diff, RT_ce_diffs$proportion, p.adjust.method = "bonferroni")
df <- read_csv('data/exp1_task_switching/acc_df.csv')
#fit fixed model
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df, family=binomial)
summary(lmm)
getMixedLatex <- function(lmm_model){
clean_lmm <- tibble(tidy(lmm_model)) %>%
filter(! effect == "ran_pars") %>% #remove random effect rows
select(-c("effect", "group")) %>%  # remove bad columns
mutate(p.value = case_when(p.value <= .001 ~ .001,
p.value > .999 ~ .999,
.default = round(p.value, digits=3))) %>% #correct p-values
# mutate(sig = case_when(p.value <= .001 ~ "***",
#                        p.value <= .01 ~ "**",
#                        p.value <= .05 ~ "*",
#                        .default="")) %>%
mutate(term = gsub("congruencyi", "congruency", term),
term = gsub("taskSequences", "taskSeq", term),
term = gsub("switchProp75%", "switchProp", term),
term = gsub("incProp75%", "incProp", term)) %>%
mutate(across(c("estimate", "std.error", "statistic"), function(x){round(x, digits=2)})) %>%
mutate(term = ifelse(term == "(Intercept)", "Intercept", term))
kable(clean_lmm, format="latex",align="lcccc", vline="", linesep="")
}
printEMMeans <- function(aovObj){
defaultW <- getOption("warn")
options(warn = -1)
# task sequence
emm <- emmeans(aovObj, ~ taskSequence, type="response")
print(summary(emm))
#congruency
emm <- emmeans(aovObj, ~ congruency, type="response")
print(summary(emm))
# switchProp
emm <- emmeans(aovObj, ~ switchProp, type="response")
print(summary(emm))
#incongruentProp
emm <- emmeans(aovObj, ~ incProp, type="response")
print(summary(emm))
#LWPS
emm <- emmeans(aovObj, ~ taskSequence | switchProp, regrid="response")
print(contrast(emm, interaction = "pairwise"))
#LWPC
emm <- emmeans(aovObj, ~ congruency | incProp, regrid="response")
print(contrast(emm, interaction = "pairwise"))
#cross interaction
emm <- emmeans(aovObj, ~ congruency | switchProp, regrid="response")
print(contrast(emm, interaction = "pairwise"))
emm <- emmeans(aovObj, ~ taskSequence | incProp, regrid="response")
print(contrast(emm, interaction = "pairwise"))
emm <- emmeans(aovObj, ~ switchProp | incProp, regrid="response")
print(contrast(emm, interaction = "pairwise"))
options(warn = defaultW)
}
getMixedLatex(lmm)
printEMMeans(lmm)
library(tidyverse)
library(lme4) # for linear mixed effects regression
library(lmerTest) #for getting p values from lme
library(broom.mixed) #for turning lmm results into tidy dataframe
library(knitr) #for turning tidy lmm results into latex table
library(emmeans) #for getting marginal means
#load data
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
#filter out unimportant trials
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
#fit fixed model
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df, family=binomial)
summary(lmm)
getwd()
#load data
df2 <- read_csv('data/exp1_task_switching/acc_df.csv')
df$acc == df2$acc
sum(df$acc == df2$acc)
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df2, family=binomial)
summary(lmm)
df == df2
sum(df == df2)
sum(df$acc) == sum(df$acc2)
sum(df$acc) == sum(df2$acc)
sum(df$acc == df2$acc)
sum(df$RT == df2$RT)
View(df2)
View(df)
View(df2)
str(df)
str(df2)
df2 <- tibble(df2)
str(df2)
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df2, family=binomial)
summary(lmm)
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
View(df)
#filter out unimportant trials
df <- df %>%
filter(sectionType == "mainTask")
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#load data
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
#filter out unimportant trials
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df, family=binomial)
summary(lmm)
#load data
df2 <- read_csv('data/exp1_task_switching/acc_df.csv')
str(df)
str(df2)
df2 <- read_csv('data/exp1_task_switching/acc_df.csv')
#fit fixed model
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df2, family=binomial)
summary(lmm)
str(df)
str(df2)
sum(df$acc)
sum(df2$acc)
sum(df$acc == df2$acc)
df2 <- read_csv('data/exp1_task_switching/acc_df.csv', col_types = cols())
str(df2)
library(tidyverse)
library(plotrix)
library(ggnewscale)
setwd("C:/Users/rmg55/Documents/Programming/contextual-stability-flexibility-tradeoffs")
#load data
df <- read_csv('data/exp1_task_switching/acc_df.csv', show_col_types = FALSE)
# PLOT 1
acc_sub_means <- df %>%
group_by(subject, taskSequence, congruency, switchProp, incProp) %>%
summarise(mean_acc = mean(acc, na.rm=TRUE))
acc_means <- acc_sub_means %>%
group_by(taskSequence, congruency, switchProp, incProp) %>%
summarise(sem_acc = std.error(mean_acc, na.rm=TRUE), mean_acc = mean(mean_acc, na.rm=TRUE)) %>%
mutate(taskSequence = as.factor(taskSequence))
#congruency effects by switch costs
labs <- levels(acc_means$taskSequence)
plt <- ggplot(acc_means, aes(x = as.numeric(acc_means$taskSequence), y = mean_acc,
fill=paste0(acc_means$taskSequence, acc_means$congruency))
) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=mean_acc - sem_acc, ymax = mean_acc + sem_acc), position=position_dodge(0.9), width=0.3) +
coord_cartesian(ylim=c(0.6,1)) +
# coord_cartesian(ylim=c(0.7,1)) +
scale_fill_manual(name="Congruency: ",
breaks=c("ri", "rc"),
values= c("si" = "#023047", "ri" = "#023047", "sc" = "#8ecae6", "rc" = "#8ecae6"),
labels=c("rc" = "Congruent", "ri" = "Incongruent")) +
scale_x_continuous(breaks = 1:length(labs),
labels = c("r" = "Repeat", "s" = "Switch"),
expand = c(0, 0.6),
sec.axis = sec_axis(~ . , name = "Switch Proportion", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Incongruent Proportion", breaks = NULL, labels = NULL)) +
labs(fill = "Task Sequence") +
# scale_x_discrete(labels = c('s' = 'Switch', 'r' = 'Repeat')) +
xlab("Task Sequence") +
ylab("Accuracy (%)") +
theme_cowplot(font_size=18) +
facet_grid(incProp ~ switchProp) +
theme(panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.spacing = unit(-0.05, "lines"),
axis.line.x.top = element_blank(),
axis.line.y.right  = element_blank())
plt_legend <- get_legend(plt + theme(legend.direction = "horizontal",legend.justification="center" ,legend.box.just = "bottom"))
plt <- plt + theme(legend.position="none")
plt_final <- plot_grid(plt, plt_legend, rel_heights = c(1, 0.1), align = "v", ncol=1)
plt_final
acc_sub_congruencyeffects <- acc_sub_means %>%
group_by(subject, taskSequence, switchProp, incProp) %>%
mutate(acc_total = sum(mean_acc)) %>%
filter(congruency == "i") %>%
mutate(congruent_acc = acc_total - mean_acc,
congruency_effect = mean_acc - congruent_acc) %>%
select(subject, taskSequence, switchProp, incProp, congruency_effect)
acc_congruencyeffects <- acc_sub_congruencyeffects %>%
group_by(taskSequence, switchProp, incProp) %>%
summarise(sem_ce = std.error(congruency_effect), mean_ce = mean(congruency_effect)) %>%
mutate(taskSequence = as.factor(taskSequence))
labs <- levels(acc_congruencyeffects$taskSequence)
plt2 <- ggplot(acc_congruencyeffects, aes(x = as.numeric(acc_congruencyeffects$taskSequence), y = mean_ce, fill=taskSequence)) +
geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=mean_ce - sem_ce, ymax = mean_ce + sem_ce), position=position_dodge(0.9), width=0.3) +
scale_fill_manual(values=c("s" = "darkslategrey", "r" = "grey")) +
# scale_x_discrete(labels = c("r" = "Repeat", "s" = "Switch")) +
scale_x_continuous(breaks = 1:length(labs),
labels = c("r" = "Repeat", "s" = "Switch"),
expand = c(0, 0.6),
sec.axis = sec_axis(~ . , name = "Switch Proportion", breaks = NULL, labels = NULL)) +
scale_y_continuous(sec.axis = sec_axis(~ . , name = "Incongruent Proportion", breaks = NULL, labels = NULL)) +
facet_grid(incProp ~ switchProp) +
theme_cowplot(font_size = 18) +
xlab("Task Sequence") +
ylab("Congruency Effect (%)") +
theme(legend.position = "none",
panel.border = element_rect(color="black", fill=NA, size=0.5),
panel.spacing = unit(-0.05, "lines"),
axis.line.x.top = element_blank(),
axis.line.y.right  = element_blank()) +
coord_cartesian(ylim=c(-0.3, 0))
# coord_cartesian(ylim=c(-0.2, 0))
plt2
acc_sub_ce_diffs <- acc_sub_congruencyeffects %>%
ungroup() %>%
group_by(subject, switchProp, incProp) %>%
mutate(ce_total = sum(congruency_effect)) %>%
filter(taskSequence == "s") %>%
mutate(repeat_ce = ce_total - congruency_effect,
ce_diff = congruency_effect - repeat_ce) %>%
select(subject, switchProp, incProp, ce_diff)
acc_ce_diffs <- acc_sub_ce_diffs %>%
group_by(subject, switchProp, incProp) %>%
summarise(sem_ce_diff = std.error(ce_diff), mean_ce_diff = mean(ce_diff)) %>%
mutate(proportion = paste(switchProp, incProp, sep="_"))
ggplot(acc_ce_diffs, aes(x = proportion, y = mean_ce_diff, fill=proportion)) +
geom_boxplot() +
xlab("Switch_Incongruent Proportion")
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/make_RT_table.R", echo=TRUE)
View(df)
library(tidyverse)
library(plotrix)
library(patchwork)
library(gt)
setwd("C:/Users/rmg55/Documents/Programming/contextual-stability-flexibility-tradeoffs")
df <- read_csv('data/exp1_task_switching/RT_df.csv')
View(df)
df <- read_csv('data/exp1_task_switching/raw_data.csv')
#filter out none relevant rows
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
write_csv(df, paste0(path, 'data/exp1_task_switching/acc_df.csv'))
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/preprocess.R", echo=TRUE)
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/preprocess.R", echo=TRUE)
df <- read_csv('data/exp1_task_switching/RT_df.csv')
#fit fixed model
lmm <- lmer(RT ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=RT_df)
summary(lmm)
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/make_RT_table.R", echo=TRUE)
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/tradeoff_by_block_analysis_RT.R", echo=TRUE)
source("~/Programming/contextual-stability-flexibility-tradeoffs/analysis/exp1_task_switching/analyze_acc.R", echo=TRUE)
getwd
getwd()
df <- read_csv('data/exp1_task_switching/acc_df.csv', col_types = cols())
#fit fixed model
lmm <- glmer(acc ~ congruency * taskSequence * switchProp * incProp +
(1|subject), data=df, family=binomial)
summary(lmm)
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
df <- read_csv('data/exp1_task_switching/raw_data.csv')
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
path <-  "C:/Users/rmg55/Box/Data/Task_Switching_Flanker/CrossTaskInterference/"
file <- "combinedData_TSF.csv"
df <- read_csv(paste(path,file,sep=""))
#filter out unimportant trials
df <- df %>%
filter(sectionType == "mainTask")
#exclude participants
acc_cutoff = .75
accuracies <- df %>%
group_by(subject) %>%
summarise(mean_acc = mean(acc, na.rm = TRUE))
excluded_subs <- accuracies %>%
filter(mean_acc < acc_cutoff) %>%
select(subject, mean_acc)
#final acc df
df <- df %>%
filter(!subject %in% excluded_subs$subject) %>%
filter(switchType != "n") %>%
mutate(switchProp = ifelse(blockType == "B" | blockType == "D", "75%", "25%")) %>%
mutate(incProp = ifelse(blockType == "A" | blockType == "B", "75%", "25%")) %>%
rename(congruency = stimCongruency, taskSequence = switchType)
str(df)
df <- read_csv('data/exp1_task_switching/acc_df.csv', col_types = cols())
str(df)
df <- read_csv("C:/Users/rmg55/Box/Data/SF_Sequence2/combinedData.csv")
df <- df %>%
mutate(subject = paste("sub",match(subject, unique(subject)),sep = ""))
View(df)
getwd()
write_csv(df, "data/exp2_embedded_diagnostic_trials/raw_data.csv")
